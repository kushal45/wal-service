apiVersion: apps/v1
kind: Deployment
metadata:
  name: wal-service
  namespace: wal-service-dev
  labels:
    app.kubernetes.io/name: wal-service
    app.kubernetes.io/component: api
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: wal-service
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: wal-service
        app.kubernetes.io/component: api
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/api/v1/metrics"
    spec:
      containers:
      - name: wal-service
        # Image loaded into kind cluster via custom build script (matches Skaffold's tag assignment)
        image: kind-registry:5000/wal-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        - name: debug
          containerPort: 9229
          protocol: TCP
        volumeMounts:
        - mountPath: /app/logs
          name: logs
        - mountPath: /tmp
          name: tmp
        env:
        - name: NODE_ENV
          value: "development"
        - name: DEBUG
          value: "*"
        - name: PORT
          value: "3000"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        # Simplified config for development
        - name: LOG_LEVEL
          value: "debug"
        - name: LOG_FORMAT
          value: "pretty"
        - name: DATABASE_HOST
          value: "postgres"
        - name: DATABASE_PORT
          value: "5432"
        - name: DATABASE_USERNAME
          value: "postgres"
        - name: DATABASE_PASSWORD
          value: "password"
        - name: DATABASE_NAME
          value: "wal_service"
        - name: SKIP_DB
          value: "true"
        - name: CHOKIDAR_USEPOLLING
          value: "1"
        - name: CHOKIDAR_INTERVAL
          value: "300"
        resources:
          requests:
            memory: "512Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/v1/health/liveness
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v1/health/liveness
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        startupProbe:
          httpGet:
            path: /api/v1/health/liveness
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 20
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      volumes:
      - name: logs
        emptyDir: {}
      - name: tmp
        emptyDir: {}